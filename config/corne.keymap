/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    macros {
        macro_greater_than: macro_greater_than {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press   &kp LEFT_ALT>,
                <&macro_tap     &kp KP_NUMBER_6 &kp KP_N2>,
                <&macro_release &kp LEFT_ALT>;

            label = "MACRO_GREATER_THAN";
        };
        macro_less_than: macro_less_than {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press   &kp LEFT_ALT>,
                <&macro_tap     &kp KP_NUMBER_6 &kp KP_N0>,
                <&macro_release &kp LEFT_ALT>;

            label = "MACRO_LESS_THAN";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB     &kp Q  &kp W  &kp E             &kp R    &kp T        &kp Y        &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp ESCAPE  &kp A  &kp S  &kp D             &lt 3 F  &kp G        &kp H        &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT   &kp Z  &kp X  &kp C             &kp V    &kp B        &kp N        &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ENTER
                          &kp LEFT_CONTROL  &mo 2    &kp SPACE    &lt 4 ENTER  &mo 1  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &kp NUMBER_1          &kp N2  &kp N3            &kp N4            &kp N5       &kp N6           &kp N7               &kp N8         &kp N9      &kp N0  &kp BSPC
&trans      &trans                &kp N5  &kp RA(NUMBER_4)  &kp RA(N5)        &kp GRAVE    &trans           &kp RA(MINUS)        &kp RA(EQUAL)  &kp MINUS   &trans  &trans
&kp LSHFT   &kp LEFT_PARENTHESIS  &trans  &kp EXCLAMATION   &macro_less_than  &trans       &kp KP_SUBTRACT  &macro_greater_than  &trans         &kp RA(N8)  &trans  &trans
                                          &kp LGUI          &trans            &kp SPACE    &kp RET          &trans               &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp NUMBER_1  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR          &kp RPAR           &kp BSPC
&kp F1     &kp F2        &kp F3  &kp F4    &kp F5    &kp F6       &trans     &kp EQUAL  &kp EQUAL        &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SQT
&kp F7     &kp F8        &kp F9  &kp F10   &kp F11   &kp F12      &trans     &kp N8     &kp APOS         &trans            &trans             &kp TILDE
                                 &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        calc {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &kp KP_DIVIDE    &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp NUMBER_6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &kp KP_MINUS     &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp PLUS      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &kp KP_DOT       &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_COMMA  &trans  &trans
                        &trans  &trans  &trans           &trans           &trans           &kp KP_NUMBER_0
            >;
        };

        layer_4 {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans    &trans          &trans        &trans     &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &kp LEFT  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans    &trans          &trans        &trans     &trans  &trans
                                        &trans        &trans        &trans          &trans    &trans          &trans
            >;
        };


        mouse {
            bindings = <
&trans      &mkp LCLK        &mmv MOVE_UP   &mkp RCLK        &trans        &trans          &trans    &trans           &trans         &trans     &trans  &trans
&trans      &mmv MOVE_LEFT   &mmv MOVE_DOWN &mmv MOVE_RIGHT  &trans        &trans          &mkp LCLK &mwh SCROLL_DOWN &mwh SCROLL_UP &mkp RCLK  &trans  &trans
&trans      &mwh SCROLL_DOWN &mwh SCROLL_UP &trans           &trans        &trans          &trans    &trans           &trans         &trans     &trans  &trans
&trans      &trans        &trans          &trans    &trans          &trans
                >;
        };
    };
};
